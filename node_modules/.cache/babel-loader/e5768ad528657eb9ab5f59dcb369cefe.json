{"ast":null,"code":"var _jsxFileName = \"/home/olga/work/dev/react_red_app/src/components/PostForm.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { createPost, showAlert } from \"../redux/actions\";\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const {\n        title\n      } = this.state;\n\n      if (!title.trim()) {\n        return this.props.showAlert('Название поста не может быть пустым');\n      }\n\n      const newPost = {\n        title,\n        id: Date.now().toString()\n      };\n      this.props.createPost(newPost);\n      this.setState({\n        title: ''\n      });\n    };\n\n    this.changeInputHandler = event => {\n      event.persist();\n      this.setState(prev => ({ ...prev,\n        ...{\n          [event.target.name]: event.target.value\n        }\n      }));\n    };\n\n    this.state = {\n      title: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u043F\\u043E\\u0441\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      value: this.state.title,\n      name: \"title\",\n      onChange: this.changeInputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  createPost,\n  showAlert\n};\nexport default connect(null, mapDispatchToProps)(PostForm);","map":{"version":3,"sources":["/home/olga/work/dev/react_red_app/src/components/PostForm.js"],"names":["React","connect","createPost","showAlert","PostForm","Component","constructor","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","setState","changeInputHandler","persist","prev","target","name","value","render","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,aARmB,GAQFC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAACC,QAAAA;AAAD,UAAU,KAAKC,KAArB;;AACA,UAAG,CAACD,KAAK,CAACE,IAAN,EAAJ,EAAiB;AACb,eAAO,KAAKN,KAAL,CAAWJ,SAAX,CAAqB,qCAArB,CAAP;AACH;;AACD,YAAMW,OAAO,GAAG;AACZH,QAAAA,KADY;AACLI,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,GAAWC,QAAX;AADC,OAAhB;AAGA,WAAKX,KAAL,CAAWL,UAAX,CAAsBY,OAAtB;AACA,WAAKK,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAE;AAAR,OAAd;AAEH,KArBkB;;AAAA,SAuBnBS,kBAvBmB,GAuBGX,KAAD,IAAc;AAC/BA,MAAAA,KAAK,CAACY,OAAN;AACA,WAAKF,QAAL,CAAcG,IAAI,KACd,EACI,GAAGA,IADP;AAEI,WAAG;AAAC,WAACb,KAAK,CAACc,MAAN,CAAaC,IAAd,GAAqBf,KAAK,CAACc,MAAN,CAAaE;AAAnC;AAFP,OADc,CAAlB;AAMH,KA/BkB;;AAGf,SAAKb,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AA2BDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKlB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,EAAE,EAAC,OAHP;AAII,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWD,KAJtB;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,QAAQ,EAAE,KAAKS,kBANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,eAaI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAbJ,CADJ;AAiBH;;AArDkC;;AAwDvC,MAAMO,kBAAkB,GAAG;AACvBzB,EAAAA,UADuB;AACXC,EAAAA;AADW,CAA3B;AAIA,eAAeF,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCvB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux'\nimport {createPost, showAlert} from \"../redux/actions\";\n\nclass PostForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n        }\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n\n        const {title} = this.state;\n        if(!title.trim()){\n            return this.props.showAlert('Название поста не может быть пустым');\n        }\n        const newPost = {\n            title, id: Date.now().toString(),\n        };\n        this.props.createPost(newPost);\n        this.setState({title: ''})\n\n    };\n\n    changeInputHandler = (event) =>    {\n        event.persist();\n        this.setState(prev => (\n            {\n                ...prev,\n                ...{[event.target.name]: event.target.value}\n            }\n        ))\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.submitHandler}>\n                <Alert/>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Заголовок поста</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"title\"\n                        value={this.state.title}\n                        name=\"title\"\n                        onChange={this.changeInputHandler}\n                    />\n                </div>\n                <button className=\"btn btn-success\" type=\"submit\">Создать</button>\n            </form>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    createPost, showAlert\n};\n\nexport default connect(null, mapDispatchToProps)(PostForm);"]},"metadata":{},"sourceType":"module"}
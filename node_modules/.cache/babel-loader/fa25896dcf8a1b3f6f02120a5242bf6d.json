{"ast":null,"code":"var _jsxFileName = \"/home/olga/work/dev/react_red_app/src/components/Posts.js\";\nimport React from \"react\";\nimport Post from \"./Post\";\nimport { connect } from \"react-redux\";\n\nconst Posts = ({\n  posts\n}) => {\n  if (!posts.length) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    }, \"\\u041F\\u043E\\u0441\\u0442\\u043E\\u0432 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442\");\n  }\n\n  return posts.map(post => /*#__PURE__*/React.createElement(Post, {\n    post: post,\n    key: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 30\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  console.log('!', state);\n  return {\n    syncPosts\n  };\n};\n\nexport default connect(mapStateToProps, null)(Posts);","map":{"version":3,"sources":["/home/olga/work/dev/react_red_app/src/components/Posts.js"],"names":["React","Post","connect","Posts","posts","length","map","post","mapStateToProps","state","console","log","syncPosts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACvB,MAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACf,wBAAO;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAAP;AACH;;AACD,SAAOD,KAAK,CAACE,GAAN,CAAUC,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAAP;AACH,CALD;;AAOA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,KAAjB;AACA,SAAO;AACHG,IAAAA;AADG,GAAP;AAGH,CALD;;AAOA,eAAeV,OAAO,CAACM,eAAD,EAAkB,IAAlB,CAAP,CAA+BL,KAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport Post from \"./Post\";\nimport {connect} from \"react-redux\"\n\n\nconst Posts = ({posts}) => {\n    if (!posts.length) {\n        return <p className=\"text-center\">Постов пока нет</p>\n    }\n    return posts.map(post => <Post post={post} key={post}/>)\n};\n\nconst mapStateToProps = state => {\n    console.log('!', state);\n    return {\n        syncPosts\n    }\n};\n\nexport default connect(mapStateToProps, null)(Posts)"]},"metadata":{},"sourceType":"module"}